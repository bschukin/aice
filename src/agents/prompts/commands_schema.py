from __future__ import annotations
from typing import Optional
from pydantic import BaseModel, Field
from src.agents.prompts.PRD_schema import PRD

# СХЕМА ОТВЕТА ИИ-Агентов

"""
Модуль для описания формата ответов ИИ-агентов. 
Описывает структурированную схему ответов на запросы пользователя (Заказчика продукта).
Важно! Ответы даются в формате json в соответствии с классом AgentResponse.

Каждый ответ ИИ-агента должен решить две задачи:
    - дать ответ в формате обычной человеческой речи, который продолжает, уточняет, развивает диалог с другой стороной 
      (человеком или ИИ-агента), подводит итоги текущей сессии, резюмирует.
    - дать изменения или полную версию целевого артефакта (у каждого ИИ-агента есть такой целевой артефакт за который он отвечает)  
"""



class AgentResponse(BaseModel):
    """
        Структура ответа состоит из четырех полей:

            1. for_human. (Ответ для человека - обязательный раздел)
            2. artifact (Артефакт - опциональный раздел. Документ в одном из форматов документов. пока - только формат PRD)
            3. artifact_delta (Изменения Артефаакта - опциональный раздел. Изменения даются в одном из форматов документов. пока - только формат PRD)
            3. no_new_information (Новой информации для внесения изменений в артефакты от человека или ии-агента не поступило)

           **for_human**
                Ответ в диалоге "агент - человек",  предназначен для передачи в чат человеку.
                Текст для человека может:
                - содержать ответы на его вопросы и запросы (например),
                - сообщать информацию о произведенных изменения в артефактах (если Заказчик просил напрямую сделать изменения в них)
                - содержать вопросы, уточнения, предложения ии-агента для более точного решения поставленных задач
                (например уточнения требований, согласование архитектурных решений и т.п.)

           **artifact или artifact_delta**
                Артефакт - целевой документ, который ведет ИИ-агент (например, агент "Аналитик" ведет документ PRD(Project Requirements Document)).

                Агент обязательно олжен заполнить один из двух разделов про артефакт:
                - Если агент считает необходимым дать полный текст артефакта следует заполнить раздел "Artifact".
                - Если агент считает необходимым дать изменненные места артефакта следует заполнить раздел "ArtifactDelta".

                При выборе поля для передачи информации (artifact, artifact_delta) - другой раздел не печатается вовсе.

                Когда следует выбирать полный документ (артефакт), а когда изменения:
                   Поле "artifact" выбираем, если подходит одно из правил:
                        - Если артефакт еще не создан (на стадии инициации проекта) или очень мал (начальная стадия проекта)
                        - Если изменения существенны и сильно переделывают содержимое артефакта.
                   Поле "artifact_delta" выбираем  если подходит одно из правил:
                        - в результате последнего сообщения пользователя нет новой информации (выбираем artifact_delta)
                        - Изменения не изменяют существенную часть исходного документа
                        - Изменения являются изменениями конкретных логических единиц артефакта (например, требований для PRD)

                Важное правило: не знаешь какой вид изменений выбрать - выбирай полный документ (поле artifact)!
                (Исключение из важного правила: если изменений нет вообще - выбирай artifact_delta с подразделом "Нет новой информации для изменений")
                ЗАПРЕЩАЕТСЯ: передавать в ответе оба поля одновременно (и artifact и artifact_delta).

            **аrtifact_delta**
            Изменения артефакта, произведенные в результате последних взаимодействий с человеком.
            Не следует передавать неизмененные сущности!
            Изменения должгы представляся новыми версиями "листовых" структурных единиц артефакта.
            (например, для PRD минимальные изменения - это объекты класса Requirement, или изменения полей класса Passport).
            Изменения следует представлять в формате артефакта (например, изменения PRD даются в формате pydantic классов PRD)
            Это позволит однозначно найти измененный элемент или раздел артефакта в исходном документе и целиком
            заменить его на новое значение.

            Поскольку все логические элементы артефактов имеют тот или иной уникальный идентификатор или наименование,
            (например, код требования в PRD) следует этот идентификатор включать в текст изменений.

        **no_new_information**
        Если в результате последнего сообщения от человека не поступило информации, которая каким либо образом меняет
        артефакт - следует установить данное поле (no_new_information) в true. В этом случае поля  artifact и artifact_delta
        выводить не требуется.
    """

    for_human: str = Field(description="Ответ для человека, на обычном языке")
    artifact:Optional[PRD] = Field(description=" Полная новая (или первая) версия проектного артефакта.")
    artifact_delta: Optional[PRD] = Field(description="Измененная версия документа."
                                                     " Для передачи дельт используется полная версия формата")
    no_new_information:Optional[bool] = Field(description="Флаг, устанавливается в true, если изменений в артефактах нет. Если False. - поле нужно не выводить в json")
